\chapter{Implementierung}

Ursprünglich war die Idee ein Eigenständiges Programm zu entwickeln, welches Selbstständig Wasserzeichen auf Bildern platziert. Dabei sollten die Gesichter freigelassen werden um die Ästhetik des Bildes nicht zu stören. Aufgrund der Limitierten Zeit wird dieser Ansatz reduziert, was ebenfalls ermöglicht ihn flexibler zu gestalten. Indem statt eines eigenständigen Programms ein Package erstellt wird, ermöglicht man noch mehr Anwendungszwecke über das einfache Platzieren von Wasserzeichen hinaus.

Um möglichst viele Verschiedene Anwendungszwecke abzudecken akzeptiert das Paket verschiedene Arten von eingaben:
\begin{itemize}
  \item None: Lässt den Nutzer einen Ordner in einem GUI Manuell wählen durch den Iteriert werden soll.
  \item File: Es kann ein Pfad zu einer einzelnen Bild Datei hinterlegt werden welche bearbeitet werden soll.
  \item Path: Wird stattdessen der Pfad eines Ordners übergeben, so werden alle Bilder dieses Ordners zu einer Liste verarbeitet durch die dann iteriert wird.
  \item List: Wenn die interne Funktion unzureichend ist für den Anwendungskontext oder man einfach bereits eine List mit Bilderpfaden hat so kann man diese an das Paket übergeben um diese direkt zu verwenden.
\end{itemize}

Auch wenn die confidence Grenzwerte nach bestem Wissen optimiert wurden, kann es dennoch sein dass bestimmte Bilder bestimmte Werte benötigen. Aus diesem Grund wurde die Möglichkeit hinzugefügt die confidence Werte während der Anwendung zu konfigurieren um für jedes Bild und jedes Modell einzeln Grenzwerte zu bestimmen falls nötig. Genauso ist es auch möglich während der Anwendung für jedes Bild Modell an oder abzuschalten je nach Notwendigkeit.

Bisher wurden für das Laden der Bilder in dieser Arbeit CV2 genutzt genauer die Funktion \texttt{cv2.imread()} welche Bilder im BGR-Format lädt. Bei der Implementierung ist allerdings aufgefallen das diese Funktion Probleme mit Umlauten hat, was Problematisch ist wenn Dateipfade geladen werden die diese Enthalten. Also wurde auf die Funktion \texttt{Image.open().convert("RGB")} von PIL gewechselt. Interessanter Weise waren die Ergebnisse von RetinaFace mit RGB-Input, obwohl angegeben wurde das BGR als Input verwendet werden sollte \parencite{lizardNttstar25}. Die confidence Werte waren minimal anders ca. 0.02 und es gab weniger False-Negatives, weshalb RGB nun als Input für RetinaFace verwendet wird.

% TODO
Erkannte Bereiche werden als Dict in einer Liste gespeichert mit den Attributen x, y, w, h, model, confidence und image\_name.

Der Grund warum Funktionen Attribute für x, y, breite und höhe erwarten kommt daher, das es wenn mit Frontend gearbeitet wird eher x, y, breite und höhe für etwas angegeben wird, als die Eckpunkte eines Objekts, zudem sind nicht alle Overlays Rechteckig. Entsprechend ist dies auch der Grund warum intern makierte Breiche in diesem Format gespeichert werden.

Das Format in dem RetinaFace seine Ergebnisse gibt unterscheidet sich leicht von \gls{mtcnn} und Dlib \gls{cnn}. RetinaFace gibt als Ergebnis die Eckpunkte eines Rechtecks, während die beiden anderen Modelle einen Startpunkt inklusive Breite und Höhe geben. Um die Arbeit mit den gemeinsamen Ergebnissen der Modellen zu erleichtern werden die Ergebnisse von RetinaFace in das Format von \gls{mtcnn} und Dlib \gls{cnn} gebracht.

Die Farben der markierten Gesichter wurden für das Package angepasst so dass sie von Farbenblinden noch gut unterschieden werden können. Als Basis für die Auswahl der Farben diente das Paper von \cite{abs-2107-02270}. Gewählt wurden \texttt{(87, 144, 252)} \textcolor{PetroffBlue}{\rule{1em}{1em}} Blau für RetinaFace, \texttt{(248, 156, 32)} \textcolor{PetroffOrange}{\rule{1em}{1em}} Orange für \gls{mtcnn} und \texttt{(228, 37, 54)} \textcolor{PetroffRed}{\rule{1em}{1em}} Rot für Dlib \gls{cnn}. Blau ist die Farbe die sich am besten eignet um von anderen unterschieden werden zu können. Sie wurde bewusst für RetinaFace gewählt, da das Modell als Basis dient und so am häufigsten mit den anderen Farben in Kontakt kommt. Allerdings können die gewählten Farben auf manchen Bildern etwas schlechter erkannt werden, weshalb die Option hinzugefügt wurde die Markierungen mit dunkleren Farben angezeigt zu bekommen.